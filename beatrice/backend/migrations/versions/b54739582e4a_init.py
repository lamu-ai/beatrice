"""init

Revision ID: b54739582e4a
Revises: 
Create Date: 2022-03-03 20:07:17.931337

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = 'b54739582e4a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('patron',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('anime',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('links', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('proposed_by', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('title_en', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title_jp', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('season_anime', sa.Integer(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('season_year', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['proposed_by'], ['patron.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('book',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('links', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('proposed_by', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('title_orig', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title_en', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title_it', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('author', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('release_year', sa.Integer(), nullable=True),
    sa.Column('pages', sa.Integer(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['proposed_by'], ['patron.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('manga',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('links', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('proposed_by', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('title_en', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title_jp', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('volumes', sa.Integer(), nullable=True),
    sa.Column('chapters', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['proposed_by'], ['patron.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('movie',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('links', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('proposed_by', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('title_orig', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title_en', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title_it', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('release_date', sa.Date(), nullable=True),
    sa.Column('running_time', sa.Integer(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['proposed_by'], ['patron.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('movie')
    op.drop_table('manga')
    op.drop_table('book')
    op.drop_table('anime')
    op.drop_table('patron')
    # ### end Alembic commands ###
